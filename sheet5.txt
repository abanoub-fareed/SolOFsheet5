/////1/////
; – (x + y – 2z + 1)
.586
.MODEL FLAT
INCLUDE io.h
.STACK 4096
.DATA
         prompet1 BYTE "Enter 1 number",0
         prompet2 BYTE "Enter 2 number",0
         prompet3 BYTE "Enter 3 number",0
         num1 DWORD ?
         num2 DWORD ?
         num3 DWORD ?
         resulte BYTE "the sum",0
         string BYTE 40 DUP(?)
         sum BYTE 11 DUP(?),0
.CODE
_MainProc PROC
              input prompet1,string,40 
              atod string
              mov num2,eax
              input  prompet2,string,40
              atod string
              mov num1,eax
              add eax,num2  
              mov  num2,eax
              input  prompet3,string,40
              atod string
              mov num3,eax
              mov ebx,2
              mul ebx
              ;ebx=ebx*eax
              sub eax,num2
              neg eax
              add eax,1
              neg eax
              dtoa sum,eax
              output resulte,sum
              mov eax,0
              ret
_MainProc ENDP
END
////////////2////////////
;2(y+z)+z
.586
.MODEL FLAT
INCLUDE io.h
.STACK 4096
.DATA
         prompet1 BYTE "Enter 1 number",0
         prompet2 BYTE "Enter 2 number",0
         prompet3 BYTE "Enter 3 number",0
         num1 DWORD ?
         num2 DWORD ?
         num3 DWORD ?
         resulte BYTE "the sum",0
         string BYTE 40 DUP(?)
         sum BYTE 11 DUP(?),0
.CODE
_MainProc PROC
              input prompet1,string,40 
              atod string
              mov num2,eax
              input  prompet2,string,40
              atod string
              mov num1,eax
              add eax,num2  
              mov  num2,eax
              input  prompet3,string,40
              atod string
              mov num3,eax
              mov eax,num2
              mov ebx,2
              mul ebx
              ;ebx=ebx*eax
              add eax,num3
              
              dtoa sum,eax
              output resulte,sum
              mov eax,0
              ret
_MainProc ENDP
END
///////3/////////
2*len+2wid
.586
.MODEL FLAT
INCLUDE io.h
.STACK 4096
.DATA
         prompet1 BYTE "Enter length",0
         prompet2 BYTE "Enter wdith",0
         num1 DWORD ?
         num2 DWORD ?
         resulte BYTE "the sum",0
         string BYTE 40 DUP(?)
         sum BYTE 11 DUP(?),0
.CODE
_MainProc PROC
              input prompet1,string,40 
              atod string
              mov ebx ,2
              mul ebx
              mov num1,eax
              input  prompet2,string,40
              atod string
              mov ebx ,2
              mul ebx
              add num1,eax
              mov eax,num1
              dtoa sum,eax
              output resulte,sum
              mov eax,0
              ret
_MainProc ENDP
END
///////P4///////
.586
.MODEL FLAT
INCLUDE io.h
.STACK 4096
.DATA
	prompt BYTE "Result :)",0
	prompt0 BYTE  "enter number of pennies ",0
	prompt1 BYTE  "enter number of nickels ",0
	prompt2 BYTE  "enter number of dimes ",0
	prompt3 BYTE  "enter number of quarters ",0
	prompt4 BYTE  "enter number of fifty-cent pieces ",0
	prompt5 BYTE  "enter number of dollar  ",0
	pd DWORD ?
	t  DWORD ?
	string  BYTE 11 DUP(?),0
	ruselt  BYTE "The toatal you enter is "
	SumOfDollar BYTE 11 DUP(?)
	   BYTE "  Dollar and "
	   ;BYTE ","
	RestOfPennies BYTE 11 DUP(?)
	   BYTE "  Pennies ",0
	   ;BYTE "  Dollar  ",0

.CODE
_MainProc PROC 
	input prompt0 ,string ,11
	atod string 
	mov pd,eax

	
	input prompt1 ,string ,11
	atod string 
	mov t,eax
	mov eax,5
	mul t
	add pd,eax
	
	input prompt2 ,string ,11
	atod string 
	mov t,eax
	mov eax,10
	mul t
	add pd,eax

	input prompt3,string ,11
	atod string 
	mov t,eax
	mov eax,25
	mul t
	add pd,eax

	input prompt4 ,string ,11
	atod string 
	mov t,eax
	mov eax,50
	mul t
	add pd,eax

	input prompt5 ,string ,11
	atod string 
	mov t,eax
	mov eax,100
	mul t
	add eax,pd
	mov ebx,100
	div ebx


	dtoa RestOfPennies,edx
	dtoa SumOfDollar,eax
	output prompt,ruselt

	mov eax,0 
	ret

_MainProc ENDP

END
////P5////
.586
.MODEL FLAT
INCLUDE io.h
.STACK 4096
.DATA
	prompt BYTE "Result :)",0
	prompt0  BYTE  "enter grade of course 1 ",0
	prompt1 BYTE  "enter grade of course 2 ",0
	prompt2 BYTE  "enter grade of course 3 ",0
	prompt3 BYTE  "enter grade of course 4 ",0
	su DWORD ?
	t  DWORD ?
	string  BYTE 11 DUP(?),0
	result BYTE "The average grades is "
	average  BYTE 11 DUP(?)
	   BYTE "  grade and "
	RestOFDivgen BYTE 11 DUP(?)
	   BYTE "  of 4 ",0

.CODE
_MainProc PROC 
	input prompt0 ,string,11
	atod string
	mov su,eax

	
	input prompt1 ,string,11
	atod string
	add su,eax

	input prompt2 ,string,11
	atod string
	add su,eax

	input prompt3 ,string,11
	atod string
	add su,eax
	mov eax,0
	mov eax,su
	mov ebx,4
	div ebx

	dtoa RestOFDivgen,edx
	dtoa average,eax
	output prompt ,result

	mov eax,0 
	ret

_MainProc ENDP

END
////6//////
.586
.MODEL FLAT
INCLUDE io.h
cr EQU  0dh
lf EQU  0ah
.STACK 4096
.DATA
	prompt BYTE "Result :)",0
	prompt0 BYTE  "enter grade  1 ",0
	prompt1 BYTE  "enter weight 1 ",0
	prompt2 BYTE  "enter grade  2 ",0
	prompt3 BYTE  "enter weight 2 ",0
	prompt4 BYTE  "enter grade  3 ",0
	prompt5 BYTE  "enter weight 3 ",0
	prompt6 BYTE  "enter grade  4 ",0
	prompt7 BYTE  "enter weight 4 ",0
	grade1 DWORD ?
	grade2 DWORD ?
	grade3 DWORD ?
	grade4 DWORD ?
	weigh1 DWORD ?
	weigh2 DWORD ?
	weigh3 DWORD ?
	weigh4 DWORD ?
	ws DWORD ?
	sw DWORD ?
	wa DWORD ?
	string   BYTE 11 DUP(?),0
	ruselt   BYTE "weighted sum: "
	wss BYTE 11 DUP(?)
	    BYTE cr,lf,"sum of weights: "
	sws BYTE 11 DUP(?)
	    BYTE cr,lf,"weighted average: "
	was BYTE 11 DUP(?),0

.CODE
_MainProc PROC 
	input prompt0 ,string,11
	atod string
	mov grade1,eax

	input prompt1 ,string,11
	atod string
	mov weigh1,eax

	input prompt2 ,string,11
	atod string
	mov grade2,eax

	input prompt3 ,string,11
	atod string
	mov weigh2,eax

	input prompt4 ,string,11
	atod string
	mov grade3,eax

	input prompt5 ,string,11
	atod string
	mov weigh3,eax

	input prompt6 ,string,11
	atod string
	mov grade4,eax

	input prompt7 ,string,11
	atod string
	mov weigh4,eax

	mov eax,grade1
	mul weigh1
	add ws,eax
	mov eax,grade2
	mul weigh2
	add ws,eax
	mov eax,grade3
	mul weigh3
	add ws,eax
	mov eax,grade4
	mul weigh4
	add ws,eax

	dtoa wss,ws

	mov eax,0
	add eax,weigh1
	add eax,weigh2
	add eax,weigh3
	add eax,weigh4
	mov sw,eax

	dtoa sws,sw

	mov eax,ws
	div sw

	dtoa was,eax
	output prompt,ruselt

	mov eax,0 
	ret

_MainProc ENDP

END